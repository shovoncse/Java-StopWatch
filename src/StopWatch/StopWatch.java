/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package StopWatch;

/**
 *
 * @author NAD IT
 */
public class StopWatch extends javax.swing.JFrame {

    /**
     * Creates new form StopWatch
     */
    static int hours = 0;
    static int minutes = 0;
    static int seconds = 0;
    static int miliseconds = 0;
    
    static boolean state = true;
    public StopWatch() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        minute = new javax.swing.JLabel();
        second = new javax.swing.JLabel();
        milisecond = new javax.swing.JLabel();
        hour = new javax.swing.JLabel();
        satrt_btn = new javax.swing.JButton();
        stop_btn = new javax.swing.JButton();
        reset_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        minute.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        minute.setText("00 :");

        second.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        second.setText("00 :");

        milisecond.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        milisecond.setText("00");

        hour.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        hour.setText("00 :");

        satrt_btn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        satrt_btn.setText("Start");
        satrt_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                satrt_btnActionPerformed(evt);
            }
        });

        stop_btn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        stop_btn.setText("Stop");
        stop_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop_btnActionPerformed(evt);
            }
        });

        reset_btn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        reset_btn.setText("Reset");
        reset_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(satrt_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hour, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(minute, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stop_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(second, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(milisecond, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(reset_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minute)
                    .addComponent(second)
                    .addComponent(hour)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(milisecond, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(satrt_btn)
                    .addComponent(stop_btn)
                    .addComponent(reset_btn))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //START BUTTON CLICK
    private void satrt_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_satrt_btnActionPerformed
        // TODO add your handling code here:
        
        state = true;
        /**
         Thread class provide constructors and methods to create and perform operations on a thread.Thread class extends Object class and implements Runnable interface.
         **/
        Thread t = new Thread(){
            //public void run(): is used to perform action for a thread.
            public void run(){
                //forever alone loop :(
                for (;;) {
                    if (state == true) 
                    {
                        try 
                        {
                            //The sleep() method of Thread class is used to sleep a thread for the specified amount of time.
    //                      //public void sleep(long miliseconds): Causes the currently executing thread to sleep (temporarily cease execution) for the specified number of milliseconds.
                            sleep(1);
                            
                            if(miliseconds>1000){
                                miliseconds = 0;
                                seconds++;
                            }
                            if(seconds>60){
                                miliseconds = 0;
                                seconds = 0;
                                minutes ++;
                            }
                            if(minutes>1000){
                                miliseconds = 0;
                                seconds = 0;
                                minutes = 0;
                                hours++;
                            }
                            
                            milisecond.setText(" : "+miliseconds);
                            
                            miliseconds++;
                            
                            second.setText(" : "+seconds);  
                            minute.setText(" : "+minutes);  
                            hour.setText(""+hours);  
                            
                        } 
                        catch (Exception e) 
                        {
                        }
                    }
                    
                }
            }
        };
        t.start();
    }//GEN-LAST:event_satrt_btnActionPerformed
    
    //STOP BUTTON
    private void stop_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop_btnActionPerformed
        // TODO add your handling code here:
        state = false;
    }//GEN-LAST:event_stop_btnActionPerformed
    
    //Reset Button Pressed
    private void reset_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_btnActionPerformed
        // TODO add your handling code here:
        state = false;
        
        hours = 0;
        minutes = 0;
        seconds = 0;
        miliseconds = 0;
        
        milisecond.setText("00 : ");
        second.setText("00 : ");  
        minute.setText("00 : ");  
        hour.setText("00");  
    }//GEN-LAST:event_reset_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StopWatch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hour;
    private javax.swing.JLabel milisecond;
    private javax.swing.JLabel minute;
    private javax.swing.JButton reset_btn;
    private javax.swing.JButton satrt_btn;
    private javax.swing.JLabel second;
    private javax.swing.JButton stop_btn;
    // End of variables declaration//GEN-END:variables
}
